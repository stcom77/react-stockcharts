{"version":3,"sources":["../../../src/lib/interactive/InteractiveYCoordinate.js"],"names":["InteractiveYCoordinate","props","handleDrag","bind","handleDragComplete","terminate","saveNodeType","getSelectionState","nodes","state","index","yValue","setState","override","moreProps","yCoordinateList","newAlertList","map","each","idx","selected","draggedAlert","onDragComplete","xyValue","current","start","end","onDelete","propTypes","onChoosePosition","func","isRequired","onSelect","defaultPriceCoordinate","shape","bgFill","string","bgOpacity","number","stroke","strokeDasharray","oneOf","strokeOpacity","strokeWidth","textFill","fontFamily","fontWeight","fontStyle","fontSize","text","textWidth","textBox","height","left","width","padding","right","closeIcon","edge","fill","fillOpacity","hoverText","object","array","enabled","bool","defaultProps","orient","at","arrowWidth","dx","rectWidth","rectHeight","displayFormat","enable","bgHeight","bgWidth","contextTypes","subscribe","unsubscribe","generateSubscriptionId","chartId","oneOfType"],"mappings":"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","file":"InteractiveYCoordinate.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { isDefined, noop, strokeDashTypes } from \"../utils\";\n\nimport {\n  getValueFromOverride,\n  terminate,\n  saveNodeType,\n  isHoverForInteractiveType,\n} from \"./utils\";\nimport EachInteractiveYCoordinate from \"./wrapper/EachInteractiveYCoordinate\";\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\n\nclass InteractiveYCoordinate extends Component {\n  constructor(props) {\n    super(props);\n    this.handleDrag = this.handleDrag.bind(this);\n    this.handleDragComplete = this.handleDragComplete.bind(this);\n    this.terminate = terminate.bind(this);\n\n    this.saveNodeType = saveNodeType.bind(this);\n    this.getSelectionState = isHoverForInteractiveType(\"yCoordinateList\")\n      .bind(this);\n\n    this.nodes = [];\n    this.state = {};\n  }\n\n  handleDrag(index, yValue) {\n    this.setState({\n      override: {\n        index,\n        yValue,\n      }\n    });\n  }\n\n  handleDragComplete(moreProps) {\n    const { override } = this.state;\n    if (isDefined(override)) {\n      const { yCoordinateList } = this.props;\n      const newAlertList = yCoordinateList\n        .map((each, idx) => {\n          const selected = (idx === override.index);\n          return selected\n            ? {\n              ...each,\n              yValue: override.yValue,\n              selected,\n            }\n            : {\n              ...each,\n              selected\n            };\n        });\n      const draggedAlert = newAlertList[override.index];\n      this.setState({\n        override: null,\n      }, () => {\n        this.props.onDragComplete(newAlertList, moreProps, draggedAlert);\n      });\n    }\n  }\n\n  handleDrawLine(xyValue) {\n    const { current } = this.state;\n\n    if (isDefined(current) && isDefined(current.start)) {\n      this.setState({\n        current: {\n          start: current.start,\n          end: xyValue,\n        }\n      });\n    }\n  }\n\n  render() {\n    const { yCoordinateList, onDelete } = this.props;\n    const { override } = this.state;\n\n    return (\n      <g>\n        {yCoordinateList.map((each, idx) => {\n          const props = each;\n          return (\n            <EachInteractiveYCoordinate\n              key={idx}\n              ref={this.saveNodeType(idx)}\n              index={idx}\n              {...props}\n              selected={each.selected}\n              yValue={getValueFromOverride(override, idx, \"yValue\", each.yValue)}\n              onDelete={onDelete}\n              onDrag={this.handleDrag}\n              onDragComplete={this.handleDragComplete}\n              edgeInteractiveCursor=\"react-stockcharts-move-cursor\"\n            />\n          );\n        })}\n      </g>\n    );\n  }\n}\n\nInteractiveYCoordinate.propTypes = {\n  onChoosePosition: PropTypes.func.isRequired,\n  onDragComplete: PropTypes.func.isRequired,\n  onSelect: PropTypes.func,\n  onDelete: PropTypes.func,\n\n  defaultPriceCoordinate: PropTypes.shape({\n    bgFill: PropTypes.string.isRequired,\n    bgOpacity: PropTypes.number.isRequired,\n\n    stroke: PropTypes.string.isRequired,\n    strokeDasharray: PropTypes.oneOf(strokeDashTypes).isRequired,\n    strokeOpacity: PropTypes.number.isRequired,\n    strokeWidth: PropTypes.number.isRequired,\n\n    textFill: PropTypes.string.isRequired,\n    fontFamily: PropTypes.string.isRequired,\n    fontWeight: PropTypes.string.isRequired,\n    fontStyle: PropTypes.string.isRequired,\n    fontSize: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    textWidth: PropTypes.number,\n    textBox: PropTypes.shape({\n      height: PropTypes.number.isRequired,\n      left: PropTypes.number.isRequired,\n      width: PropTypes.number.isRequired,\n      padding: PropTypes.shape({\n        left: PropTypes.number.isRequired,\n        right: PropTypes.number.isRequired,\n      }),\n      closeIcon: PropTypes.shape({\n        padding: PropTypes.shape({\n          left: PropTypes.number.isRequired,\n          right: PropTypes.number.isRequired,\n        }),\n        width: PropTypes.number.isRequired,\n      })\n    }).isRequired,\n    edge: PropTypes.shape({\n      stroke: PropTypes.string.isRequired,\n      strokeOpacity: PropTypes.number.isRequired,\n      strokeWidth: PropTypes.number.isRequired,\n\n      fill: PropTypes.string.isRequired,\n      fillOpacity: PropTypes.number.isRequired,\n    })\n  }).isRequired,\n\n  hoverText: PropTypes.object.isRequired,\n  yCoordinateList: PropTypes.array.isRequired,\n  enabled: PropTypes.bool.isRequired,\n};\n\nInteractiveYCoordinate.defaultProps = {\n  onChoosePosition: noop,\n  onDragComplete: noop,\n  onSelect: noop,\n  onDelete: noop,\n\n  defaultPriceCoordinate: {\n    bgFill: \"#FFFFFF\",\n    bgOpacity: 1,\n\n    stroke: \"#6574CD\",\n    strokeOpacity: 1,\n    strokeDasharray: \"ShortDash2\",\n    strokeWidth: 1,\n\n    textFill: \"#6574CD\",\n    fontFamily: \"Helvetica Neue, Helvetica, Arial, sans-serif\",\n    fontSize: 12,\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    text: \"Alert\",\n    textWidth: 40,\n    textBox: {\n      height: 24,\n      left: 20,\n      width: 50,\n      padding: { left: 10, right: 5 },\n      closeIcon: {\n        padding: { left: 5, right: 8 },\n        width: 8,\n      }\n    },\n    edge: {\n      stroke: \"#6574CD\",\n      strokeOpacity: 1,\n      strokeWidth: 1,\n\n      fill: \"#FFFFFF\",\n      fillOpacity: 1,\n      orient: \"right\",\n      at: \"right\",\n      arrowWidth: 10,\n      dx: 0,\n      rectWidth: 50,\n      rectHeight: 20,\n      displayFormat: format(\".2f\"),\n    }\n  },\n  hoverText: {\n    ...HoverTextNearMouse.defaultProps,\n    enable: true,\n    bgHeight: 18,\n    bgWidth: 175,\n    text: \"Click and drag the edge circles\",\n  },\n  textWidth: 40,\n  yCoordinateList: [],\n};\n\nInteractiveYCoordinate.contextTypes = {\n  subscribe: PropTypes.func.isRequired,\n  unsubscribe: PropTypes.func.isRequired,\n  generateSubscriptionId: PropTypes.func.isRequired,\n  chartId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n};\n\nexport default InteractiveYCoordinate;\n"]}