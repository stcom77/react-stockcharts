{"version":3,"sources":["../../../src/lib/coordinates/EdgeCoordinateV3.js"],"names":["renderSVG","drawOnCanvas","props","className","edge","helper","line","coordinateBase","coordinate","timer","opacity","stroke","strokeWidth","strokeDasharray","x1","y1","x2","y2","rectWidth","rectHeight","arrowWidth","tickerWidth","tickerHeight","path","orient","edgeXRect","edgeYRect","strokeOpacity","fill","edgeXText","edgeYText","textAnchor","fontFamily","fontSize","textFill","displayCoordinate","show","type","edgeAt","hideLine","lineStrokeDasharray","lineStroke","lineOpacity","lineStrokeWidth","rectRadius","dx","dy","undefined","ctx","font","textBaseline","width","Math","round","measureText","dashArray","split","map","d","setLineDash","strokeStyle","lineWidth","beginPath","moveTo","lineTo","fillStyle","x","y","halfHeight","closePath","roundRect","rect","textAlign","fillText","height","radius","quadraticCurveTo"],"mappings":"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","file":"EdgeCoordinateV3.js","sourcesContent":["import React from \"react\";\n\nimport { hexToRGBA, isDefined, getStrokeDasharray } from \"../utils\";\nimport TimeIndicator from './TimeIndicator';\n\n/* eslint-disable react/prop-types */\nexport function renderSVG(props) {\n\tconst { className } = props;\n\n\tconst edge = helper(props);\n\tif (edge === null) return null;\n\tlet line, coordinateBase, coordinate, timer;\n\n\tif (isDefined(edge.line)) {\n\n\t\tline = (\n\t\t\t<line\n\t\t\t\tclassName=\"react-stockcharts-cross-hair\"\n\t\t\t\tstrokeOpacity={edge.line.opacity}\n\t\t\t\tstroke={edge.line.stroke}\n\t\t\t\tstrokeWidth={edge.line.strokeWidth}\n\t\t\t\tstrokeDasharray={getStrokeDasharray(edge.line.strokeDasharray)}\n\t\t\t\tx1={edge.line.x1}\n\t\t\t\ty1={edge.line.y1}\n\t\t\t\tx2={edge.line.x2}\n\t\t\t\ty2={edge.line.y2}\n\t\t\t/>\n\t\t);\n\t}\n\tif (isDefined(edge.coordinateBase)) {\n\t\tconst { rectWidth, rectHeight, arrowWidth, tickerWidth, tickerHeight } = edge.coordinateBase;\n\n\t\tconst path =\n\t\t\tedge.orient === \"left\"\n\t\t\t\t? `M0,0L0,${rectHeight}L${rectWidth},${rectHeight}L${rectWidth +\n\t\t\t\tarrowWidth},10L${rectWidth},0L0,0L0,0`\n\t\t\t\t: `M0,${arrowWidth}L${arrowWidth},${rectHeight}L${rectWidth +\n\t\t\t\tarrowWidth},${rectHeight}L${rectWidth +\n\t\t\t\tarrowWidth},0L${arrowWidth},0L0,${arrowWidth}`;\n\n\t\tcoordinateBase =\n\t\t\tedge.orient === \"left\" || edge.orient === \"right\" ? (\n\t\t\t\t<g\n\t\t\t\t\tkey={1}\n\t\t\t\t\ttransform={`translate(${edge.coordinateBase.edgeXRect},${\n\t\t\t\t\t\tedge.coordinateBase.edgeYRect\n\t\t\t\t\t\t})`}\n\t\t\t\t>\n\t\t\t\t\t<path\n\t\t\t\t\t\td={path}\n\t\t\t\t\t\tclassName=\"react-stockchart-text-background\"\n\t\t\t\t\t\theight={rectHeight}\n\t\t\t\t\t\twidth={rectWidth}\n\t\t\t\t\t\tstroke={edge.coordinateBase.stroke}\n\t\t\t\t\t\tstrokeLinejoin=\"miter\"\n\t\t\t\t\t\tstrokeOpacity={edge.coordinateBase.strokeOpacity}\n\t\t\t\t\t\tstrokeWidth={edge.coordinateBase.strokeWidth}\n\t\t\t\t\t\tfill={edge.coordinateBase.fill}\n\t\t\t\t\t\tfillOpacity={edge.coordinateBase.opacity}\n\t\t\t\t\t/>\n\t\t\t\t</g>\n\t\t\t) : (\n\t\t\t\t<rect\n\t\t\t\t\tkey={1}\n\t\t\t\t\tclassName=\"react-stockchart-text-background\"\n\t\t\t\t\tx={edge.coordinateBase.edgeXRect}\n\t\t\t\t\ty={edge.coordinateBase.edgeYRect}\n\t\t\t\t\theight={rectHeight}\n\t\t\t\t\twidth={rectWidth}\n\t\t\t\t\tfill={edge.coordinateBase.fill}\n\t\t\t\t\topacity={edge.coordinateBase.opacity}\n\t\t\t\t/>\n\t\t\t);\n\n\t\tcoordinate = (\n\t\t\t<text\n\t\t\t\tkey={2}\n\t\t\t\tx={edge.coordinate.edgeXText}\n\t\t\t\ty={edge.coordinate.edgeYText}\n\t\t\t\ttextAnchor={edge.coordinate.textAnchor}\n\t\t\t\tfontFamily={edge.coordinate.fontFamily}\n\t\t\t\tfontSize={edge.coordinate.fontSize}\n\t\t\t\tdy=\".32em\"\n\t\t\t\tfill={edge.coordinate.textFill}\n\t\t\t>\n\t\t\t\t{edge.coordinate.displayCoordinate}\n\t\t\t</text>\n\t\t);\n\t\ttimer = (\n\t\t\t<TimeIndicator\n\t\t\t\twidth={tickerWidth}\n\t\t\t\theight={tickerHeight}\n\t\t\t\tfill={edge.coordinateBase.fill}\n\t\t\t\tx={edge.coordinate.edgeXText - rectWidth / 2}\n\t\t\t\ty={edge.coordinate.edgeYText + rectHeight / 2}\n\t\t\t/>\n\t\t);\n\t}\n\treturn (\n\t\t<g className={className}>\n\t\t\t{line}\n\t\t\t{coordinateBase}\n\t\t\t{coordinate}\n\t\t\t{timer}\n\t\t</g>\n\t);\n}\n\n/* eslint-enable react/prop-types */\n\nfunction helper(props) {\n\tconst {\n\t\tcoordinate: displayCoordinate,\n\t\tshow,\n\t\ttype,\n\t\torient,\n\t\tedgeAt,\n\t\thideLine,\n\t\tlineStrokeDasharray\n\t} = props;\n\tconst {\n\t\tfill,\n\t\topacity,\n\t\tfontFamily,\n\t\tfontSize,\n\t\ttextFill,\n\t\tlineStroke,\n\t\tlineOpacity,\n\t\tlineStrokeWidth\n\t} = props;\n\tconst { stroke, strokeOpacity, strokeWidth } = props;\n\tconst { arrowWidth, rectWidth, rectHeight, rectRadius, tickerWidth, tickerHeight } = props;\n\tconst { x1, y1, x2, y2, dx } = props;\n\n\tif (!show) return null;\n\n\tlet coordinateBase, coordinate;\n\tif (isDefined(displayCoordinate)) {\n\t\tconst textAnchor = \"middle\"; // TODO: Below it is necessary to implement logic for the possibility of alignment from the right or from the left.\n\n\t\tlet edgeXRect, edgeYRect, edgeXText, edgeYText;\n\n\t\tif (type === \"horizontal\") {\n\t\t\tedgeXRect =\n\t\t\t\tdx + (orient === \"right\" ? edgeAt + 1 : edgeAt - rectWidth - 1);\n\t\t\tedgeYRect = y1 - rectHeight / 2 - strokeWidth;\n\t\t\tedgeXText =\n\t\t\t\tdx +\n\t\t\t\t(orient === \"right\"\n\t\t\t\t\t? edgeAt + rectWidth / 2 + 10\n\t\t\t\t\t: edgeAt - rectWidth / 2 - 10);\n\t\t\tedgeYText = y1;\n\t\t} else {\n\t\t\tconst dy = orient === \"bottom\" ? strokeWidth - 1 : -strokeWidth + 1;\n\t\t\tedgeXRect = x1 - rectWidth / 2;\n\t\t\tedgeYRect =\n\t\t\t\t(orient === \"bottom\" ? edgeAt : edgeAt - rectHeight) + dy;\n\t\t\tedgeXText = x1;\n\t\t\tedgeYText =\n\t\t\t\t(orient === \"bottom\"\n\t\t\t\t\t? edgeAt + rectHeight / 2\n\t\t\t\t\t: edgeAt - rectHeight / 2) + dy;\n\t\t}\n\n\t\tcoordinateBase = {\n\t\t\tedgeXRect,\n\t\t\tedgeYRect,\n\t\t\trectHeight: rectHeight + strokeWidth,\n\t\t\trectWidth,\n\t\t\ttickerWidth,\n\t\t\ttickerHeight,\n\t\t\trectRadius,\n\t\t\tfill,\n\t\t\topacity,\n\t\t\tarrowWidth,\n\t\t\tstroke,\n\t\t\tstrokeOpacity,\n\t\t\tstrokeWidth\n\t\t};\n\t\tcoordinate = {\n\t\t\tedgeXText,\n\t\t\tedgeYText,\n\t\t\ttextAnchor,\n\t\t\tfontFamily,\n\t\t\tfontSize,\n\t\t\ttextFill,\n\t\t\tdisplayCoordinate\n\t\t};\n\t}\n\n\tconst line = hideLine\n\t\t? undefined\n\t\t: {\n\t\t\topacity: lineOpacity,\n\t\t\tstroke: lineStroke,\n\t\t\tstrokeDasharray: lineStrokeDasharray,\n\t\t\tstrokeWidth: lineStrokeWidth,\n\t\t\tx1,\n\t\t\ty1,\n\t\t\tx2,\n\t\t\ty2\n\t\t};\n\n\treturn {\n\t\tcoordinateBase,\n\t\tcoordinate,\n\t\tline,\n\t\torient\n\t};\n}\n\nexport function drawOnCanvas(ctx, props) {\n\tconst { fontSize, fontFamily } = props;\n\n\tctx.font = `${fontSize}px ${fontFamily}`;\n\tctx.textBaseline = \"middle\";\n\tconst width = Math.round(ctx.measureText(props.coordinate).width + 10);\n\n\tconst edge = helper({ ...props, rectWidth: width });\n\n\tif (edge === null) return;\n\n\tif (isDefined(edge.line)) {\n\t\tconst dashArray = getStrokeDasharray(edge.line.strokeDasharray)\n\t\t\t.split(\",\")\n\t\t\t.map(d => +d);\n\t\tctx.setLineDash(dashArray);\n\t\tctx.strokeStyle = hexToRGBA(edge.line.stroke, edge.line.opacity);\n\t\tctx.lineWidth = 1;\n\t\tctx.beginPath();\n\t\tctx.moveTo(edge.line.x1, edge.line.y1);\n\t\tctx.lineTo(edge.line.x2, edge.line.y2);\n\t\tctx.stroke();\n\t}\n\n\tctx.setLineDash([]);\n\tif (isDefined(edge.coordinateBase)) {\n\t\tconst {\n\t\t\trectWidth,\n\t\t\trectHeight,\n\t\t\trectRadius,\n\t\t\tarrowWidth\n\t\t} = edge.coordinateBase;\n\n\t\tctx.fillStyle = hexToRGBA(\n\t\t\tedge.coordinateBase.fill,\n\t\t\tedge.coordinateBase.opacity\n\t\t);\n\t\tif (isDefined(edge.coordinateBase.stroke)) {\n\t\t\tctx.strokeStyle = hexToRGBA(\n\t\t\t\tedge.coordinateBase.stroke,\n\t\t\t\tedge.coordinateBase.strokeOpacity\n\t\t\t);\n\t\t\tctx.lineWidth = edge.coordinateBase.strokeWidth;\n\t\t}\n\n\t\tlet x = edge.coordinateBase.edgeXRect;\n\t\tconst y = edge.coordinateBase.edgeYRect;\n\t\tconst halfHeight = rectHeight / 2;\n\n\t\tctx.beginPath();\n\t\tif (edge.orient === \"right\") {\n\t\t\tx -= arrowWidth;\n\t\t\tctx.moveTo(x, y + halfHeight);\n\t\t\tctx.lineTo(x + arrowWidth, y);\n\t\t\tctx.lineTo(x + rectWidth + arrowWidth, y);\n\t\t\tctx.lineTo(x + rectWidth + arrowWidth, y + rectHeight);\n\t\t\tctx.lineTo(x + arrowWidth, y + rectHeight);\n\t\t\tctx.closePath();\n\t\t} else if (edge.orient === \"left\") {\n\t\t\t// x += arrowWidth;\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + rectWidth, y);\n\t\t\tctx.lineTo(x + rectWidth + arrowWidth, y + halfHeight);\n\t\t\tctx.lineTo(x + rectWidth, y + rectHeight);\n\t\t\tctx.lineTo(x, y + rectHeight);\n\t\t\tctx.closePath();\n\t\t} else {\n\t\t\t// console.error(x, y, rectWidth, rectHeight)\n\t\t\tif (rectRadius) {\n\t\t\t\troundRect(ctx, x, y, rectWidth, rectHeight, 3);\n\t\t\t} else {\n\t\t\t\tctx.rect(x, y, rectWidth, rectHeight);\n\t\t\t}\n\t\t}\n\t\tctx.fill();\n\n\t\tif (isDefined(edge.coordinateBase.stroke)) {\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.fillStyle = edge.coordinate.textFill;\n\t\tctx.textAlign =\n\t\t\tedge.coordinate.textAnchor === \"middle\"\n\t\t\t\t? \"center\"\n\t\t\t\t: edge.coordinate.textAnchor;\n\t\tctx.fillText(\n\t\t\tedge.coordinate.displayCoordinate,\n\t\t\tedge.coordinate.edgeXText,\n\t\t\tedge.coordinate.edgeYText\n\t\t);\n\t}\n}\n\nfunction roundRect(ctx, x, y, width, height, radius) {\n\tctx.beginPath();\n\tctx.moveTo(x + radius, y);\n\tctx.lineTo(x + width - radius, y);\n\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\tctx.lineTo(x + width, y + height - radius);\n\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\tctx.lineTo(x + radius, y + height);\n\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\tctx.lineTo(x, y + radius);\n\tctx.quadraticCurveTo(x, y, x + radius, y);\n\tctx.closePath();\n}\n\n// export default EdgeCoordinate;\n"]}