{"version":3,"sources":["../../../../src/lib/coordinates/TimeIndicator.js"],"names":["React","TimeIndicator","width","height","fill","x","y","minutes","calcTimeToEnd","nowTimestamp","Math","floor","Date","now","divider","endTimestamp","timeFormat","num","val","sec","hours","seconds"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,gBAAgB,SAAhBA,aAAgB,OAAgD;AAAA,KAA7CC,KAA6C,QAA7CA,KAA6C;AAAA,KAAtCC,MAAsC,QAAtCA,MAAsC;AAAA,KAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,KAAxBC,CAAwB,QAAxBA,CAAwB;AAAA,KAArBC,CAAqB,QAArBA,CAAqB;AAAA,yBAAlBC,OAAkB;AAAA,KAAlBA,OAAkB,gCAAR,CAAQ;;AACrE,KAAI,CAACL,KAAD,IAAU,CAACC,MAAf,EAAuB;AACtB,SAAO,IAAP;AACA;;AAED,QACC;AAAA;AAAA;AACC,8BACK,EAAED,YAAF,EAASC,cAAT,EAAiBC,UAAjB,EAAuBC,IAAvB,EAA0BC,IAA1B,EADL,CADD;AAIC;AAAA;AAAA;AACC,SAAK,CADN;AAEC,OAAGD,CAFJ;AAGC,OAAGC,IAAIH,SAAS,CAHjB;AAIC,cAAU,EAJX;AAKC,QAAG,OALJ;AAMC,UAAK;AANN;AAQEK,iBAAcD,OAAd;AARF;AAJD,EADD;AAiBA,CAtBD;;AAwBA,eAAeN,aAAf;;AAEA,IAAMO,gBAAgB,SAAhBA,aAAgB,CAACD,OAAD,EAAa;AAClC,KAAME,eAAeC,KAAKC,KAAL,CAAWC,KAAKC,GAAL,KAAa,IAAxB,CAArB;AACA,KAAMC,UAAUP,UAAU,EAA1B;AACA,KAAMQ,eAAe,CAACL,KAAKC,KAAL,CAAWF,eAAeK,OAA1B,IAAqC,CAAtC,IAA2CA,OAAhE;AACA,QAAOE,WAAWD,eAAeN,YAA1B,CAAP;AACA,CALD;;AAOA,IAAMQ,MAAM,SAANA,GAAM,CAACC,GAAD,EAAS;AACpBA,OAAMR,KAAKC,KAAL,CAAWO,GAAX,CAAN;AACA,QAAOA,MAAM,EAAN,SAAeA,GAAf,GAAuBA,GAA9B;AACA,CAHD;;AAKA,IAAMF,aAAa,SAAbA,UAAa,CAACG,GAAD,EAAS;AAC3B,KAAMC,QAAQD,MAAM,IAAN,GAAa,EAA3B;AACA,KAAMZ,UAAUY,MAAM,EAAN,GAAW,EAA3B;AACA,KAAME,UAAUF,MAAM,EAAtB;;AAEA,QAAUF,IAAIG,KAAJ,CAAV,SAAwBH,IAAIV,OAAJ,CAAxB,SAAwCU,IAAII,OAAJ,CAAxC;AACA,CAND","file":"TimeIndicator.js","sourcesContent":["import React from \"react\";\n\nconst TimeIndicator = ({ width, height, fill, x, y, minutes = 5 }) => {\n\tif (!width || !height) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<g>\n\t\t\t<rect\n\t\t\t\t{...{ width, height, fill, x, y }}\n\t\t\t/>\n\t\t\t<text\n\t\t\t\tkey={2}\n\t\t\t\tx={x}\n\t\t\t\ty={y + height / 2}\n\t\t\t\tfontSize={12}\n\t\t\t\tdy=\".32em\"\n\t\t\t\tfill=\"white\"\n\t\t\t>\n\t\t\t\t{calcTimeToEnd(minutes)}\n\t\t\t</text>\n\t\t</g>\n\t);\n};\n\nexport default TimeIndicator;\n\nconst calcTimeToEnd = (minutes) => {\n\tconst nowTimestamp = Math.floor(Date.now() / 1000);\n\tconst divider = minutes * 60;\n\tconst endTimestamp = (Math.floor(nowTimestamp / divider) + 1) * divider;\n\treturn timeFormat(endTimestamp - nowTimestamp);\n};\n\nconst num = (val) => {\n\tval = Math.floor(val);\n\treturn val < 10 ? `0${val}` : val;\n};\n\nconst timeFormat = (sec) => {\n\tconst hours = sec / 3600 % 24;\n\tconst minutes = sec / 60 % 60;\n\tconst seconds = sec % 60;\n\n\treturn `${num(hours)}:${num(minutes)}:${num(seconds)}`;\n};\n"]}